// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lsic_messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lsic_messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Protobuf {

namespace {

const ::google::protobuf::Descriptor* SOCKET_READY_Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SOCKET_READY_Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSIC_A_Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSIC_A_Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSIC_B_Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSIC_B_Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Enc_Compare_Setup_Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Enc_Compare_Setup_Message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_lsic_5fmessages_2eproto() {
  protobuf_AddDesc_lsic_5fmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "lsic_messages.proto");
  GOOGLE_CHECK(file != NULL);
  SOCKET_READY_Message_descriptor_ = file->message_type(0);
  static const int SOCKET_READY_Message_offsets_[1] = {
  };
  SOCKET_READY_Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SOCKET_READY_Message_descriptor_,
      SOCKET_READY_Message::default_instance_,
      SOCKET_READY_Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOCKET_READY_Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SOCKET_READY_Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SOCKET_READY_Message));
  LSIC_A_Message_descriptor_ = file->message_type(1);
  static const int LSIC_A_Message_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_A_Message, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_A_Message, tau_),
  };
  LSIC_A_Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LSIC_A_Message_descriptor_,
      LSIC_A_Message::default_instance_,
      LSIC_A_Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_A_Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_A_Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LSIC_A_Message));
  LSIC_B_Message_descriptor_ = file->message_type(2);
  static const int LSIC_B_Message_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_B_Message, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_B_Message, tb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_B_Message, bi_),
  };
  LSIC_B_Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LSIC_B_Message_descriptor_,
      LSIC_B_Message::default_instance_,
      LSIC_B_Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_B_Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSIC_B_Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LSIC_B_Message));
  Enc_Compare_Setup_Message_descriptor_ = file->message_type(3);
  static const int Enc_Compare_Setup_Message_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Enc_Compare_Setup_Message, bit_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Enc_Compare_Setup_Message, c_z_),
  };
  Enc_Compare_Setup_Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Enc_Compare_Setup_Message_descriptor_,
      Enc_Compare_Setup_Message::default_instance_,
      Enc_Compare_Setup_Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Enc_Compare_Setup_Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Enc_Compare_Setup_Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Enc_Compare_Setup_Message));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_lsic_5fmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SOCKET_READY_Message_descriptor_, &SOCKET_READY_Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LSIC_A_Message_descriptor_, &LSIC_A_Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LSIC_B_Message_descriptor_, &LSIC_B_Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Enc_Compare_Setup_Message_descriptor_, &Enc_Compare_Setup_Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_lsic_5fmessages_2eproto() {
  delete SOCKET_READY_Message::default_instance_;
  delete SOCKET_READY_Message_reflection_;
  delete LSIC_A_Message::default_instance_;
  delete LSIC_A_Message_reflection_;
  delete LSIC_B_Message::default_instance_;
  delete LSIC_B_Message_reflection_;
  delete Enc_Compare_Setup_Message::default_instance_;
  delete Enc_Compare_Setup_Message_reflection_;
}

void protobuf_AddDesc_lsic_5fmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Protobuf::protobuf_AddDesc_bigint_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023lsic_messages.proto\022\010Protobuf\032\014bigint."
    "proto\"\026\n\024SOCKET_READY_Message\">\n\016LSIC_A_"
    "Message\022\r\n\005index\030\001 \002(\r\022\035\n\003tau\030\002 \002(\0132\020.Pr"
    "otobuf.BigInt\"[\n\016LSIC_B_Message\022\r\n\005index"
    "\030\001 \002(\r\022\034\n\002tb\030\002 \002(\0132\020.Protobuf.BigInt\022\034\n\002"
    "bi\030\003 \002(\0132\020.Protobuf.BigInt\"N\n\031Enc_Compar"
    "e_Setup_Message\022\022\n\nbit_length\030\001 \001(\r\022\035\n\003c"
    "_z\030\002 \002(\0132\020.Protobuf.BigInt", 306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lsic_messages.proto", &protobuf_RegisterTypes);
  SOCKET_READY_Message::default_instance_ = new SOCKET_READY_Message();
  LSIC_A_Message::default_instance_ = new LSIC_A_Message();
  LSIC_B_Message::default_instance_ = new LSIC_B_Message();
  Enc_Compare_Setup_Message::default_instance_ = new Enc_Compare_Setup_Message();
  SOCKET_READY_Message::default_instance_->InitAsDefaultInstance();
  LSIC_A_Message::default_instance_->InitAsDefaultInstance();
  LSIC_B_Message::default_instance_->InitAsDefaultInstance();
  Enc_Compare_Setup_Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_lsic_5fmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_lsic_5fmessages_2eproto {
  StaticDescriptorInitializer_lsic_5fmessages_2eproto() {
    protobuf_AddDesc_lsic_5fmessages_2eproto();
  }
} static_descriptor_initializer_lsic_5fmessages_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

SOCKET_READY_Message::SOCKET_READY_Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protobuf.SOCKET_READY_Message)
}

void SOCKET_READY_Message::InitAsDefaultInstance() {
}

SOCKET_READY_Message::SOCKET_READY_Message(const SOCKET_READY_Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Protobuf.SOCKET_READY_Message)
}

void SOCKET_READY_Message::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SOCKET_READY_Message::~SOCKET_READY_Message() {
  // @@protoc_insertion_point(destructor:Protobuf.SOCKET_READY_Message)
  SharedDtor();
}

void SOCKET_READY_Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SOCKET_READY_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SOCKET_READY_Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SOCKET_READY_Message_descriptor_;
}

const SOCKET_READY_Message& SOCKET_READY_Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lsic_5fmessages_2eproto();
  return *default_instance_;
}

SOCKET_READY_Message* SOCKET_READY_Message::default_instance_ = NULL;

SOCKET_READY_Message* SOCKET_READY_Message::New() const {
  return new SOCKET_READY_Message;
}

void SOCKET_READY_Message::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SOCKET_READY_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protobuf.SOCKET_READY_Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Protobuf.SOCKET_READY_Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protobuf.SOCKET_READY_Message)
  return false;
#undef DO_
}

void SOCKET_READY_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protobuf.SOCKET_READY_Message)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protobuf.SOCKET_READY_Message)
}

::google::protobuf::uint8* SOCKET_READY_Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protobuf.SOCKET_READY_Message)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protobuf.SOCKET_READY_Message)
  return target;
}

int SOCKET_READY_Message::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SOCKET_READY_Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SOCKET_READY_Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SOCKET_READY_Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SOCKET_READY_Message::MergeFrom(const SOCKET_READY_Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SOCKET_READY_Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SOCKET_READY_Message::CopyFrom(const SOCKET_READY_Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SOCKET_READY_Message::IsInitialized() const {

  return true;
}

void SOCKET_READY_Message::Swap(SOCKET_READY_Message* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SOCKET_READY_Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SOCKET_READY_Message_descriptor_;
  metadata.reflection = SOCKET_READY_Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LSIC_A_Message::kIndexFieldNumber;
const int LSIC_A_Message::kTauFieldNumber;
#endif  // !_MSC_VER

LSIC_A_Message::LSIC_A_Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protobuf.LSIC_A_Message)
}

void LSIC_A_Message::InitAsDefaultInstance() {
  tau_ = const_cast< ::Protobuf::BigInt*>(&::Protobuf::BigInt::default_instance());
}

LSIC_A_Message::LSIC_A_Message(const LSIC_A_Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Protobuf.LSIC_A_Message)
}

void LSIC_A_Message::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  tau_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LSIC_A_Message::~LSIC_A_Message() {
  // @@protoc_insertion_point(destructor:Protobuf.LSIC_A_Message)
  SharedDtor();
}

void LSIC_A_Message::SharedDtor() {
  if (this != default_instance_) {
    delete tau_;
  }
}

void LSIC_A_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSIC_A_Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSIC_A_Message_descriptor_;
}

const LSIC_A_Message& LSIC_A_Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lsic_5fmessages_2eproto();
  return *default_instance_;
}

LSIC_A_Message* LSIC_A_Message::default_instance_ = NULL;

LSIC_A_Message* LSIC_A_Message::New() const {
  return new LSIC_A_Message;
}

void LSIC_A_Message::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    index_ = 0u;
    if (has_tau()) {
      if (tau_ != NULL) tau_->::Protobuf::BigInt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LSIC_A_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protobuf.LSIC_A_Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tau;
        break;
      }

      // required .Protobuf.BigInt tau = 2;
      case 2: {
        if (tag == 18) {
         parse_tau:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tau()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protobuf.LSIC_A_Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protobuf.LSIC_A_Message)
  return false;
#undef DO_
}

void LSIC_A_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protobuf.LSIC_A_Message)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // required .Protobuf.BigInt tau = 2;
  if (has_tau()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tau(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protobuf.LSIC_A_Message)
}

::google::protobuf::uint8* LSIC_A_Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protobuf.LSIC_A_Message)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // required .Protobuf.BigInt tau = 2;
  if (has_tau()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tau(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protobuf.LSIC_A_Message)
  return target;
}

int LSIC_A_Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // required .Protobuf.BigInt tau = 2;
    if (has_tau()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tau());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSIC_A_Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LSIC_A_Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LSIC_A_Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LSIC_A_Message::MergeFrom(const LSIC_A_Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_tau()) {
      mutable_tau()->::Protobuf::BigInt::MergeFrom(from.tau());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LSIC_A_Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSIC_A_Message::CopyFrom(const LSIC_A_Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSIC_A_Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_tau()) {
    if (!this->tau().IsInitialized()) return false;
  }
  return true;
}

void LSIC_A_Message::Swap(LSIC_A_Message* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(tau_, other->tau_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LSIC_A_Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSIC_A_Message_descriptor_;
  metadata.reflection = LSIC_A_Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LSIC_B_Message::kIndexFieldNumber;
const int LSIC_B_Message::kTbFieldNumber;
const int LSIC_B_Message::kBiFieldNumber;
#endif  // !_MSC_VER

LSIC_B_Message::LSIC_B_Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protobuf.LSIC_B_Message)
}

void LSIC_B_Message::InitAsDefaultInstance() {
  tb_ = const_cast< ::Protobuf::BigInt*>(&::Protobuf::BigInt::default_instance());
  bi_ = const_cast< ::Protobuf::BigInt*>(&::Protobuf::BigInt::default_instance());
}

LSIC_B_Message::LSIC_B_Message(const LSIC_B_Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Protobuf.LSIC_B_Message)
}

void LSIC_B_Message::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  tb_ = NULL;
  bi_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LSIC_B_Message::~LSIC_B_Message() {
  // @@protoc_insertion_point(destructor:Protobuf.LSIC_B_Message)
  SharedDtor();
}

void LSIC_B_Message::SharedDtor() {
  if (this != default_instance_) {
    delete tb_;
    delete bi_;
  }
}

void LSIC_B_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSIC_B_Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSIC_B_Message_descriptor_;
}

const LSIC_B_Message& LSIC_B_Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lsic_5fmessages_2eproto();
  return *default_instance_;
}

LSIC_B_Message* LSIC_B_Message::default_instance_ = NULL;

LSIC_B_Message* LSIC_B_Message::New() const {
  return new LSIC_B_Message;
}

void LSIC_B_Message::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    index_ = 0u;
    if (has_tb()) {
      if (tb_ != NULL) tb_->::Protobuf::BigInt::Clear();
    }
    if (has_bi()) {
      if (bi_ != NULL) bi_->::Protobuf::BigInt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LSIC_B_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protobuf.LSIC_B_Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tb;
        break;
      }

      // required .Protobuf.BigInt tb = 2;
      case 2: {
        if (tag == 18) {
         parse_tb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bi;
        break;
      }

      // required .Protobuf.BigInt bi = 3;
      case 3: {
        if (tag == 26) {
         parse_bi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bi()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protobuf.LSIC_B_Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protobuf.LSIC_B_Message)
  return false;
#undef DO_
}

void LSIC_B_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protobuf.LSIC_B_Message)
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // required .Protobuf.BigInt tb = 2;
  if (has_tb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tb(), output);
  }

  // required .Protobuf.BigInt bi = 3;
  if (has_bi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protobuf.LSIC_B_Message)
}

::google::protobuf::uint8* LSIC_B_Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protobuf.LSIC_B_Message)
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // required .Protobuf.BigInt tb = 2;
  if (has_tb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->tb(), target);
  }

  // required .Protobuf.BigInt bi = 3;
  if (has_bi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protobuf.LSIC_B_Message)
  return target;
}

int LSIC_B_Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // required .Protobuf.BigInt tb = 2;
    if (has_tb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tb());
    }

    // required .Protobuf.BigInt bi = 3;
    if (has_bi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bi());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSIC_B_Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LSIC_B_Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LSIC_B_Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LSIC_B_Message::MergeFrom(const LSIC_B_Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_tb()) {
      mutable_tb()->::Protobuf::BigInt::MergeFrom(from.tb());
    }
    if (from.has_bi()) {
      mutable_bi()->::Protobuf::BigInt::MergeFrom(from.bi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LSIC_B_Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSIC_B_Message::CopyFrom(const LSIC_B_Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSIC_B_Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_tb()) {
    if (!this->tb().IsInitialized()) return false;
  }
  if (has_bi()) {
    if (!this->bi().IsInitialized()) return false;
  }
  return true;
}

void LSIC_B_Message::Swap(LSIC_B_Message* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(tb_, other->tb_);
    std::swap(bi_, other->bi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LSIC_B_Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSIC_B_Message_descriptor_;
  metadata.reflection = LSIC_B_Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Enc_Compare_Setup_Message::kBitLengthFieldNumber;
const int Enc_Compare_Setup_Message::kCZFieldNumber;
#endif  // !_MSC_VER

Enc_Compare_Setup_Message::Enc_Compare_Setup_Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protobuf.Enc_Compare_Setup_Message)
}

void Enc_Compare_Setup_Message::InitAsDefaultInstance() {
  c_z_ = const_cast< ::Protobuf::BigInt*>(&::Protobuf::BigInt::default_instance());
}

Enc_Compare_Setup_Message::Enc_Compare_Setup_Message(const Enc_Compare_Setup_Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Protobuf.Enc_Compare_Setup_Message)
}

void Enc_Compare_Setup_Message::SharedCtor() {
  _cached_size_ = 0;
  bit_length_ = 0u;
  c_z_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Enc_Compare_Setup_Message::~Enc_Compare_Setup_Message() {
  // @@protoc_insertion_point(destructor:Protobuf.Enc_Compare_Setup_Message)
  SharedDtor();
}

void Enc_Compare_Setup_Message::SharedDtor() {
  if (this != default_instance_) {
    delete c_z_;
  }
}

void Enc_Compare_Setup_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Enc_Compare_Setup_Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Enc_Compare_Setup_Message_descriptor_;
}

const Enc_Compare_Setup_Message& Enc_Compare_Setup_Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lsic_5fmessages_2eproto();
  return *default_instance_;
}

Enc_Compare_Setup_Message* Enc_Compare_Setup_Message::default_instance_ = NULL;

Enc_Compare_Setup_Message* Enc_Compare_Setup_Message::New() const {
  return new Enc_Compare_Setup_Message;
}

void Enc_Compare_Setup_Message::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    bit_length_ = 0u;
    if (has_c_z()) {
      if (c_z_ != NULL) c_z_->::Protobuf::BigInt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Enc_Compare_Setup_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Protobuf.Enc_Compare_Setup_Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 bit_length = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bit_length_)));
          set_has_bit_length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_c_z;
        break;
      }

      // required .Protobuf.BigInt c_z = 2;
      case 2: {
        if (tag == 18) {
         parse_c_z:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_c_z()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Protobuf.Enc_Compare_Setup_Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Protobuf.Enc_Compare_Setup_Message)
  return false;
#undef DO_
}

void Enc_Compare_Setup_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Protobuf.Enc_Compare_Setup_Message)
  // optional uint32 bit_length = 1;
  if (has_bit_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bit_length(), output);
  }

  // required .Protobuf.BigInt c_z = 2;
  if (has_c_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->c_z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Protobuf.Enc_Compare_Setup_Message)
}

::google::protobuf::uint8* Enc_Compare_Setup_Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protobuf.Enc_Compare_Setup_Message)
  // optional uint32 bit_length = 1;
  if (has_bit_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bit_length(), target);
  }

  // required .Protobuf.BigInt c_z = 2;
  if (has_c_z()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->c_z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protobuf.Enc_Compare_Setup_Message)
  return target;
}

int Enc_Compare_Setup_Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 bit_length = 1;
    if (has_bit_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bit_length());
    }

    // required .Protobuf.BigInt c_z = 2;
    if (has_c_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->c_z());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Enc_Compare_Setup_Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Enc_Compare_Setup_Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Enc_Compare_Setup_Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Enc_Compare_Setup_Message::MergeFrom(const Enc_Compare_Setup_Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bit_length()) {
      set_bit_length(from.bit_length());
    }
    if (from.has_c_z()) {
      mutable_c_z()->::Protobuf::BigInt::MergeFrom(from.c_z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Enc_Compare_Setup_Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Enc_Compare_Setup_Message::CopyFrom(const Enc_Compare_Setup_Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Enc_Compare_Setup_Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_c_z()) {
    if (!this->c_z().IsInitialized()) return false;
  }
  return true;
}

void Enc_Compare_Setup_Message::Swap(Enc_Compare_Setup_Message* other) {
  if (other != this) {
    std::swap(bit_length_, other->bit_length_);
    std::swap(c_z_, other->c_z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Enc_Compare_Setup_Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Enc_Compare_Setup_Message_descriptor_;
  metadata.reflection = Enc_Compare_Setup_Message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protobuf

// @@protoc_insertion_point(global_scope)

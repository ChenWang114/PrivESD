// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigint.proto

#ifndef PROTOBUF_bigint_2eproto__INCLUDED
#define PROTOBUF_bigint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bigint_2eproto();
void protobuf_AssignDesc_bigint_2eproto();
void protobuf_ShutdownFile_bigint_2eproto();

class BigInt;
class BigIntArray;
class BigIntMatrix;
class BigIntMatrix_Collection;

// ===================================================================

class BigInt : public ::google::protobuf::Message {
 public:
  BigInt();
  virtual ~BigInt();

  BigInt(const BigInt& from);

  inline BigInt& operator=(const BigInt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigInt& default_instance();

  void Swap(BigInt* other);

  // implements Message ----------------------------------------------

  BigInt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigInt& from);
  void MergeFrom(const BigInt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Protobuf.BigInt)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_bigint_2eproto();
  friend void protobuf_AssignDesc_bigint_2eproto();
  friend void protobuf_ShutdownFile_bigint_2eproto();

  void InitAsDefaultInstance();
  static BigInt* default_instance_;
};
// -------------------------------------------------------------------

class BigIntArray : public ::google::protobuf::Message {
 public:
  BigIntArray();
  virtual ~BigIntArray();

  BigIntArray(const BigIntArray& from);

  inline BigIntArray& operator=(const BigIntArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigIntArray& default_instance();

  void Swap(BigIntArray* other);

  // implements Message ----------------------------------------------

  BigIntArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigIntArray& from);
  void MergeFrom(const BigIntArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protobuf.BigInt values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::Protobuf::BigInt& values(int index) const;
  inline ::Protobuf::BigInt* mutable_values(int index);
  inline ::Protobuf::BigInt* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::Protobuf::BigInt >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protobuf::BigInt >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:Protobuf.BigIntArray)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Protobuf::BigInt > values_;
  friend void  protobuf_AddDesc_bigint_2eproto();
  friend void protobuf_AssignDesc_bigint_2eproto();
  friend void protobuf_ShutdownFile_bigint_2eproto();

  void InitAsDefaultInstance();
  static BigIntArray* default_instance_;
};
// -------------------------------------------------------------------

class BigIntMatrix : public ::google::protobuf::Message {
 public:
  BigIntMatrix();
  virtual ~BigIntMatrix();

  BigIntMatrix(const BigIntMatrix& from);

  inline BigIntMatrix& operator=(const BigIntMatrix& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigIntMatrix& default_instance();

  void Swap(BigIntMatrix* other);

  // implements Message ----------------------------------------------

  BigIntMatrix* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigIntMatrix& from);
  void MergeFrom(const BigIntMatrix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protobuf.BigIntArray lines = 1;
  inline int lines_size() const;
  inline void clear_lines();
  static const int kLinesFieldNumber = 1;
  inline const ::Protobuf::BigIntArray& lines(int index) const;
  inline ::Protobuf::BigIntArray* mutable_lines(int index);
  inline ::Protobuf::BigIntArray* add_lines();
  inline const ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntArray >&
      lines() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntArray >*
      mutable_lines();

  // @@protoc_insertion_point(class_scope:Protobuf.BigIntMatrix)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntArray > lines_;
  friend void  protobuf_AddDesc_bigint_2eproto();
  friend void protobuf_AssignDesc_bigint_2eproto();
  friend void protobuf_ShutdownFile_bigint_2eproto();

  void InitAsDefaultInstance();
  static BigIntMatrix* default_instance_;
};
// -------------------------------------------------------------------

class BigIntMatrix_Collection : public ::google::protobuf::Message {
 public:
  BigIntMatrix_Collection();
  virtual ~BigIntMatrix_Collection();

  BigIntMatrix_Collection(const BigIntMatrix_Collection& from);

  inline BigIntMatrix_Collection& operator=(const BigIntMatrix_Collection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigIntMatrix_Collection& default_instance();

  void Swap(BigIntMatrix_Collection* other);

  // implements Message ----------------------------------------------

  BigIntMatrix_Collection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigIntMatrix_Collection& from);
  void MergeFrom(const BigIntMatrix_Collection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protobuf.BigIntMatrix matrices = 1;
  inline int matrices_size() const;
  inline void clear_matrices();
  static const int kMatricesFieldNumber = 1;
  inline const ::Protobuf::BigIntMatrix& matrices(int index) const;
  inline ::Protobuf::BigIntMatrix* mutable_matrices(int index);
  inline ::Protobuf::BigIntMatrix* add_matrices();
  inline const ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntMatrix >&
      matrices() const;
  inline ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntMatrix >*
      mutable_matrices();

  // @@protoc_insertion_point(class_scope:Protobuf.BigIntMatrix_Collection)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntMatrix > matrices_;
  friend void  protobuf_AddDesc_bigint_2eproto();
  friend void protobuf_AssignDesc_bigint_2eproto();
  friend void protobuf_ShutdownFile_bigint_2eproto();

  void InitAsDefaultInstance();
  static BigIntMatrix_Collection* default_instance_;
};
// ===================================================================


// ===================================================================

// BigInt

// required bytes data = 1;
inline bool BigInt::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BigInt::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BigInt::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BigInt::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& BigInt::data() const {
  // @@protoc_insertion_point(field_get:Protobuf.BigInt.data)
  return *data_;
}
inline void BigInt::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Protobuf.BigInt.data)
}
inline void BigInt::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Protobuf.BigInt.data)
}
inline void BigInt::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Protobuf.BigInt.data)
}
inline ::std::string* BigInt::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Protobuf.BigInt.data)
  return data_;
}
inline ::std::string* BigInt::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BigInt::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Protobuf.BigInt.data)
}

// -------------------------------------------------------------------

// BigIntArray

// repeated .Protobuf.BigInt values = 1;
inline int BigIntArray::values_size() const {
  return values_.size();
}
inline void BigIntArray::clear_values() {
  values_.Clear();
}
inline const ::Protobuf::BigInt& BigIntArray::values(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.BigIntArray.values)
  return values_.Get(index);
}
inline ::Protobuf::BigInt* BigIntArray::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:Protobuf.BigIntArray.values)
  return values_.Mutable(index);
}
inline ::Protobuf::BigInt* BigIntArray::add_values() {
  // @@protoc_insertion_point(field_add:Protobuf.BigIntArray.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protobuf::BigInt >&
BigIntArray::values() const {
  // @@protoc_insertion_point(field_list:Protobuf.BigIntArray.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protobuf::BigInt >*
BigIntArray::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.BigIntArray.values)
  return &values_;
}

// -------------------------------------------------------------------

// BigIntMatrix

// repeated .Protobuf.BigIntArray lines = 1;
inline int BigIntMatrix::lines_size() const {
  return lines_.size();
}
inline void BigIntMatrix::clear_lines() {
  lines_.Clear();
}
inline const ::Protobuf::BigIntArray& BigIntMatrix::lines(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.BigIntMatrix.lines)
  return lines_.Get(index);
}
inline ::Protobuf::BigIntArray* BigIntMatrix::mutable_lines(int index) {
  // @@protoc_insertion_point(field_mutable:Protobuf.BigIntMatrix.lines)
  return lines_.Mutable(index);
}
inline ::Protobuf::BigIntArray* BigIntMatrix::add_lines() {
  // @@protoc_insertion_point(field_add:Protobuf.BigIntMatrix.lines)
  return lines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntArray >&
BigIntMatrix::lines() const {
  // @@protoc_insertion_point(field_list:Protobuf.BigIntMatrix.lines)
  return lines_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntArray >*
BigIntMatrix::mutable_lines() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.BigIntMatrix.lines)
  return &lines_;
}

// -------------------------------------------------------------------

// BigIntMatrix_Collection

// repeated .Protobuf.BigIntMatrix matrices = 1;
inline int BigIntMatrix_Collection::matrices_size() const {
  return matrices_.size();
}
inline void BigIntMatrix_Collection::clear_matrices() {
  matrices_.Clear();
}
inline const ::Protobuf::BigIntMatrix& BigIntMatrix_Collection::matrices(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.BigIntMatrix_Collection.matrices)
  return matrices_.Get(index);
}
inline ::Protobuf::BigIntMatrix* BigIntMatrix_Collection::mutable_matrices(int index) {
  // @@protoc_insertion_point(field_mutable:Protobuf.BigIntMatrix_Collection.matrices)
  return matrices_.Mutable(index);
}
inline ::Protobuf::BigIntMatrix* BigIntMatrix_Collection::add_matrices() {
  // @@protoc_insertion_point(field_add:Protobuf.BigIntMatrix_Collection.matrices)
  return matrices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntMatrix >&
BigIntMatrix_Collection::matrices() const {
  // @@protoc_insertion_point(field_list:Protobuf.BigIntMatrix_Collection.matrices)
  return matrices_;
}
inline ::google::protobuf::RepeatedPtrField< ::Protobuf::BigIntMatrix >*
BigIntMatrix_Collection::mutable_matrices() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.BigIntMatrix_Collection.matrices)
  return &matrices_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bigint_2eproto__INCLUDED

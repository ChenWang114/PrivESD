OBJDIRS     += classifiers

LINEAR_SRC := linear_classifier.cc
LINEAR_OBJ := $(patsubst %.cc,$(OBJDIR)/classifiers/%.o,$(LINEAR_SRC))

all:	$(OBJDIR)/classifiers/client_linear

$(OBJDIR)/classifiers/client_linear: $(OBJDIR)/classifiers/test_client_linear.o $(LINEAR_OBJ) $(PROTO_OBJ) $(OBJDIR)/libmpc.so $(OBJDIR)/libcipher.so $(OBJDIR)/libprotobuf_defs.so $(OBJDIR)/libnet.so
	$(CXX) $< $(LINEAR_OBJ)  -o $@  $(SHAIFHEPATH)/fhe.a $(LDFLAGS) -Wl,--no-as-needed -lmpc -lcipher -ltree\
		-L$(NTLLIBPATH) -lntl -lgf2x  $(L_BOOST_SYSTEM)\
		-lprotobuf -lprotobuf_defs -lnet -lutil

	$(CXX) $^ -o $@  $(SHAIFHEPATH)/fhe.a $(LDFLAGS) -lmpc -lcipher -L$(NTLLIBPATH) -lntl -lgf2x -lgmp   $(L_BOOST_SYSTEM)\
       -lprotobuf -lprotobuf_defs -lnet -lutil


all:	$(OBJDIR)/classifiers/server_linear

$(OBJDIR)/classifiers/server_linear: $(OBJDIR)/classifiers/test_server_linear.o $(LINEAR_OBJ) $(PROTO_OBJ) $(OBJDIR)/libmpc.so $(OBJDIR)/libcipher.so $(OBJDIR)/libmath.so $(OBJDIR)/libprotobuf_defs.so $(OBJDIR)/libnet.so
	$(CXX) $< $(LINEAR_OBJ) -o $@  $(SHAIFHEPATH)/fhe.a $(LDFLAGS) -Wl,--no-as-needed -lmpc -lcipher -lmath -lutil\
	   -L$(NTLLIBPATH) -lntl  -lgf2x -lgmp   $(L_BOOST_SYSTEM)\
       -lprotobuf -lprotobuf_defs -lnet -lutil




# vim: set noexpandtab:
